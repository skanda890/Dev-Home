<!-- Copyright (c) Microsoft Corporation.. -->
<!-- Licensed under the MIT License. -->

<UserControl
    x:Class="DevHome.SetupFlow.Views.MainPageView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ctControls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:commonviews="using:DevHome.Common.Views"
    xmlns:controls="using:DevHome.SetupFlow.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
            <converters:BoolToObjectConverter x:Key="BoolToOpacityConverter" TrueValue="1" FalseValue="0.4" />
            <x:Double x:Key="SettingsCardHeaderIconMaxSize">32</x:Double>
            <Style x:Key="ListViewItemStretchStyle" TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0, 0, 0, 4" />
                <Setter Property="Padding" Value="0"/>
                
                <!-- Include a false tabstop because the buttons on each menu item is a tab stop.
                This creates an odd behavior because each item can be tabbed into.
                Remove the tab stop from the list item.-->
                <Setter Property="IsTabStop" Value="False"/>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///DevHome.SetupFlow/Styles/SetupFlowStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <x:String x:Key="Setup_Banner_Back">ms-appx:///DevHome.Common/Assets/BannerBackgroundLight.png</x:String>
                    <x:String x:Key="Setup_Banner_Front">ms-appx:///DevHome.SetupFlow/Assets/Setup_Banner_Front_Light.png</x:String>
                </ResourceDictionary>

                <ResourceDictionary x:Key="Dark">
                    <x:String x:Key="Setup_Banner_Back">ms-appx:///DevHome.Common/Assets/BannerBackgroundDark.png</x:String>
                    <x:String x:Key="Setup_Banner_Front">ms-appx:///DevHome.SetupFlow/Assets/Setup_Banner_Front_Dark.png</x:String>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- App installer update notification -->
        <InfoBar
            x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_AppInstallerUpdateInfoBar"
            Visibility="{x:Bind ViewModel.ShowAppInstallerUpdateNotification, Mode=OneWay}"
            Severity="Warning"
            IsOpen="True"
            Margin="0,0,0,9"
            CloseButtonCommand="{x:Bind ViewModel.HideAppInstallerUpdateNotificationCommand}">
            <InfoBar.ActionButton>
                <Button
                    x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_AppInstallerUpdateButton"
                    Click="UpdateAppInstallerButton_Click"
                    HorizontalAlignment="Right"/>
            </InfoBar.ActionButton>

            <!-- Content dialog (visible when the InfoBar action button is clicked) -->
            <ContentDialog
                x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_AppInstallerUpdateContentDialog"
                Name="UpdateAppInstallerContentDialog"
                PrimaryButtonCommand="{x:Bind ViewModel.UpdateAppInstallerCommand}"
                DefaultButton="Primary"/>
        </InfoBar>

        <!-- Main content -->
        <controls:SetupShell Grid.Row="1" x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage">
            <Grid>
                <StackPanel>
                    <commonviews:Banner
                        TextWidth="345"
                        HideButtonVisibility="True"
                        HideButtonCommand="{x:Bind ViewModel.BannerViewModel.HideBannerCommand}"
                        Visibility="{x:Bind ViewModel.BannerViewModel.ShowBanner, Mode=OneWay}"
                        ButtonCommand="{x:Bind ViewModel.BannerViewModel.BannerButtonCommand, Mode=OneWay}"
                        x:Uid="ms-resource:///DevHome.SetupFlow/Resources/DefaultBanner"
                        BackgroundSource="{ThemeResource Setup_Banner_Back}"
                        OverlaySource="{ThemeResource Setup_Banner_Front}" />

                    <StackPanel AutomationProperties.Name="{x:Bind ViewModel.MainPageEnvironmentSetupGroupName}">
                        <TextBlock x:Name="SetupEnvironmentHeader"  Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_EnvironmentSetup"/>
                        <!-- Transparent Grid wrapper for displaying tooltip on disabled settings card -->
                        <ListView ItemContainerStyle="{ThemeResource ListViewItemStretchStyle}" SelectionMode="Single">
                            <Grid Background="Transparent">
                            <ctControls:SettingsCard
                                x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_SetupFlow"
                                AutomationProperties.AutomationId="EndToEndSetupButton"
                                IsClickEnabled="True"
                                Command="{x:Bind ViewModel.StartSetupCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"
                                IsEnabled="{x:Bind ViewModel.EnablePackageInstallerItem, Mode=OneWay}"
                                ActionIconToolTip="{Binding Header, RelativeSource={RelativeSource Mode=Self}}"
                                AutomationProperties.AccessibilityView="Control"
                                ActionIcon="{x:Null}">
                                <ctControls:SettingsCard.HeaderIcon>
                                    <ImageIcon
                                        Opacity="{x:Bind ViewModel.EnablePackageInstallerItem, Mode=OneWay, Converter={StaticResource BoolToOpacityConverter}}"
                                        Source="ms-appx:///DevHome.SetupFlow/Assets/Setup_EndToEnd.png" />
                                </ctControls:SettingsCard.HeaderIcon>
                            </ctControls:SettingsCard>

                            <!-- Tooltip visible when the settings card is disabled -->
                            <ToolTipService.ToolTip>
                                <ToolTip
                                    x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_MainPage_AppInstallerRequiredTooltip"
                                    IsEnabled="{x:Bind ViewModel.EnablePackageInstallerItem,Mode=OneWay, Converter={StaticResource BoolNegationConverter}}" />
                            </ToolTipService.ToolTip>
                        </Grid>
                        
                        <!--  settings card for setup target flow.  -->
                        <Grid 
                            Background="Transparent">
                            <ctControls:SettingsCard
                                x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_SetupFlow_For_target"
                                ActionIcon="{x:Null}"
                                ActionIconToolTip="{Binding Header, RelativeSource={RelativeSource Mode=Self}}"
                                AutomationProperties.AccessibilityView="Control"
                                AutomationProperties.AutomationId="SetupToATargetButton"
                                Command="{x:Bind ViewModel.StartSetupForTargetEnvironmentCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"
                                IsClickEnabled="True"
                                IsEnabled="{x:Bind ViewModel.EnablePackageInstallerItem, Mode=OneWay}">
                                <ctControls:SettingsCard.HeaderIcon>
                                    <ImageIcon 
                                        Opacity="{x:Bind ViewModel.EnablePackageInstallerItem, Mode=OneWay, Converter={StaticResource BoolToOpacityConverter}}"
                                        Source="ms-appx:///DevHome.SetupFlow/Assets/SetupVirtualEnvironment.png" />
                                </ctControls:SettingsCard.HeaderIcon>
                            </ctControls:SettingsCard>

                            <!--  Tooltip visible when the settings card is disabled  -->
                            <ToolTipService.ToolTip>
                                <ToolTip x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_MainPage_AppInstallerRequiredTooltip" IsEnabled="{x:Bind ViewModel.EnablePackageInstallerItem, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}" />
                            </ToolTipService.ToolTip>
                        </Grid>
                        <ctControls:SettingsCard
                            x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_ConfigurationFile"
                            AutomationProperties.AutomationId="DSCConfigurationButton"
                            IsClickEnabled="True"
                            Command="{x:Bind ViewModel.StartConfigurationFileCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"
                            ActionIconToolTip="{Binding Header, RelativeSource={RelativeSource Mode=Self}}"
                            AutomationProperties.AccessibilityView="Control"
                            IsEnabled="{x:Bind ViewModel.EnableConfigurationFileItem, Mode=OneWay}"
                            ActionIcon="{x:Null}" >
                            <ctControls:SettingsCard.HeaderIcon>
                                <ImageIcon Source="ms-appx:///DevHome.SetupFlow/Assets/Setup_ConfigurationFile.png" />
                            </ctControls:SettingsCard.HeaderIcon>
                            <ctControls:SettingsCard.Description>
                                <TextBlock>
                                    <Run x:Uid="MainPage_ConfigurationFile_Description"/>
                                    <Hyperlink NavigateUri="https://aka.ms/dsc.yaml">
                                        <Run x:Uid="MainPage_ConfigurationFile_Description_Link" />
                                    </Hyperlink>
                                </TextBlock>
                            </ctControls:SettingsCard.Description>
                        </ctControls:SettingsCard>
                        
                        <!-- Settings for Quickstart Playground-->
                        <ctControls:SettingsCard
                            x:Uid="MainPage_QuickstartPlayground"
                            AutomationProperties.AutomationId="QuickstartPlayground"
                            IsClickEnabled="True"
                            Command="{x:Bind ViewModel.StartQuickstartCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"
                            ActionIconToolTip="{Binding Header, RelativeSource={RelativeSource Mode=Self}}"
                            AutomationProperties.AccessibilityView="Control"
                            ActionIcon="{x:Null}" 
                            Visibility="{x:Bind ViewModel.EnableQuickstartPlayground}" >
                            <ctControls:SettingsCard.HeaderIcon>
                                <ImageIcon Source="ms-appx:///DevHome.SetupFlow/Assets/Setup_QuickstartPlayground.png" />
                            </ctControls:SettingsCard.HeaderIcon>
                            <ctControls:SettingsCard.Description>
                                <TextBlock x:Uid="MainPage_QuickstartPlayground_Description"/>
                            </ctControls:SettingsCard.Description>
                        </ctControls:SettingsCard>
                        </ListView>
                    </StackPanel>

                    <StackPanel Spacing="{StaticResource SettingsCardSpacing}" AutomationProperties.Name="{x:Bind ViewModel.MainPageQuickStepsGroupName}">
                        <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_QuickConfiguration" />
                        <ListView ItemContainerStyle="{ThemeResource ListViewItemStretchStyle}" SelectionMode="Single">
                            <!-- settings card for creating an environment -->
                            <ctControls:SettingsCard 
                                x:Uid="MainPageCreateEnvironment"
                                AutomationProperties.AutomationId="CreateEnvironment"
                                IsClickEnabled="True"
                                Command="{x:Bind ViewModel.StartCreateEnvironmentCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"
                                ActionIconToolTip="{Binding Header, RelativeSource={RelativeSource Mode=Self}}"
                                AutomationProperties.AccessibilityView="Control"
                                ActionIcon="{x:Null}" >
                                <ctControls:SettingsCard.HeaderIcon>
                                    <ImageIcon Source="ms-appx:///DevHome.SetupFlow/Assets/CreateVirtualEnvironment.png" />
                                </ctControls:SettingsCard.HeaderIcon>
                            </ctControls:SettingsCard>

                            <!-- settings card for cloning repositories -->
                            <ctControls:SettingsCard
                                x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_CloneRepos"
                                AutomationProperties.AutomationId="CloneRepoButton"
                                IsClickEnabled="True"
                                Command="{x:Bind ViewModel.StartRepoConfigCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"
                                ActionIconToolTip="{Binding Header, RelativeSource={RelativeSource Mode=Self}}"
                                AutomationProperties.AccessibilityView="Control"
                                ActionIcon="{x:Null}" >
                                <ctControls:SettingsCard.HeaderIcon>
                                    <ImageIcon Source="ms-appx:///DevHome.SetupFlow/Assets/Setup_RepoConfig.png" />
                                </ctControls:SettingsCard.HeaderIcon>
                            </ctControls:SettingsCard>
                            <!-- Transparent Grid wrapper for displaying tooltip on disabled settings card -->
                            <Grid Background="Transparent">
                                <ctControls:SettingsCard
                                    x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_InstallApps"
                                    IsClickEnabled="True"
                                    AutomationProperties.AutomationId="InstallAppsButton"
                                    Command="{x:Bind ViewModel.StartAppManagementCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}"
                                    IsEnabled="{x:Bind ViewModel.EnablePackageInstallerItem, Mode=OneWay}"
                                    ActionIconToolTip="{Binding Header, RelativeSource={RelativeSource Mode=Self}}"
                                    AutomationProperties.AccessibilityView="Control"
                                    ActionIcon="{x:Null}" >
                                    <ctControls:SettingsCard.HeaderIcon>
                                        <ImageIcon
                                        Opacity="{x:Bind ViewModel.EnablePackageInstallerItem, Mode=OneWay, Converter={StaticResource BoolToOpacityConverter}}"
                                        Source="ms-appx:///DevHome.SetupFlow/Assets/Setup_AppManagement.png" />
                                    </ctControls:SettingsCard.HeaderIcon>
                                </ctControls:SettingsCard>

                                <!-- Tooltip visible when the settings card is disabled -->
                                <ToolTipService.ToolTip>
                                    <ToolTip
                                    x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_MainPage_AppInstallerRequiredTooltip"
                                    IsEnabled="{x:Bind ViewModel.EnablePackageInstallerItem,Mode=OneWay, Converter={StaticResource BoolNegationConverter}}" />
                                </ToolTipService.ToolTip>
                            </Grid>
                            <ctControls:SettingsCard
                                x:Uid="ms-resource:///DevHome.SetupFlow/Resources/MainPage_DevDrive"
                                AutomationProperties.AutomationId="DevDriveButton"
                                IsClickEnabled="True" Command="{x:Bind ViewModel.LaunchDisksAndVolumesSettingsPageCommand}" 
                                ActionIconToolTip="{Binding Header, RelativeSource={RelativeSource Mode=Self}}"
                                AutomationProperties.AccessibilityView="Control"
                                Visibility="{x:Bind ViewModel.ShowDevDriveItem, Mode=OneWay}" >
                                <ctControls:SettingsCard.ActionIcon>
                                    <!-- The open new window icon -->
                                    <FontIcon Glyph="&#xE8A7;" />
                                </ctControls:SettingsCard.ActionIcon>
                                <ctControls:SettingsCard.HeaderIcon>
                                    <ImageIcon Source="ms-appx:///DevHome.SetupFlow/Assets/Setup_DevDrive.png" />
                                </ctControls:SettingsCard.HeaderIcon>
                            </ctControls:SettingsCard>
                        </ListView>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </controls:SetupShell>
    </Grid>
</UserControl>
